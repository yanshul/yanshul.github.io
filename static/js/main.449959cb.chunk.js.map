{"version":3,"sources":["header/Profile.js","brand/filter.js","brand/card.js","brand/index.js","header/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","object","index","defaultValue","undefined","id","this","safeReturn","props","match","params","redirectToBrand","userProfiles","Profiles","users","user","react_default","a","createElement","react_router","push","to","reach","returnObject","parseInt","parseFloat","toFixed","userDetails","categories","categoryXml","i","console","log","category","key","averageRating","averageRatingXml","className","imageUrl","name","profession","price","reachCountToObject","bio","getCategories","ratingXml","getAverageRating","src","React","Component","filterName","number","Filter","filterXml","getFilterNames","Card","cardXml","userprofiles","type","navigateTo","react_router_dom","class","getCardDetail","BrandCards","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","$","on","removeClass","addClass","dataGroup","attr","window","shuffleInstance","filter","card","href","path","component","Profile","App","header","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.449959cb.chunk.js","sourcesContent":["import React from 'react';\nimport Profiles from '../profiles.json';\nimport {Redirect} from 'react-router-dom';\n\n// require('bootstrap-material-design')\n\nclass Header extends React.Component{\n\n\n    safeReturn(object,index,defaultValue)\n    {\n        defaultValue = defaultValue == undefined ? false : defaultValue;\n        if(object == undefined || index == undefined)\n        {\n            return defaultValue;\n        }\n        if(object[index] == undefined || object[index] === '')\n        {\n            return defaultValue;\n        }\n        return object[index];\n    }\n\n    userDetails()\n    {\n        let id = this.safeReturn(this.props.match.params, 'id', '');\n        if(id == '')\n        {\n            return this.redirectToBrand();\n        }\n        let userProfiles = Profiles.users;\n        let user = this.safeReturn(userProfiles,id,false);\n        if(user == false)\n        {\n            return this.redirectToBrand();\n        }\n        return user;\n    }\n\n    redirectToBrand()\n    {\n        return <Redirect push to=\"/brand\"/>;\n    }\n    reachCountToObject(reach)\n    {\n        var returnObject = {};\n        reach = parseInt(reach);\n        returnObject['count'] = reach;\n        returnObject['unit'] = '';\n        if(reach < 1000)\n        {\n            return returnObject;\n        }\n        else if (reach < 1000000)\n        {\n            returnObject['count'] = parseFloat(reach/1000).toFixed(0);\n            returnObject['unit'] = 'k';\n        }\n        else if (reach < 1000000000)\n        {\n            returnObject['count'] = parseFloat(reach/1000000).toFixed(0);\n            returnObject['unit'] = 'm';\n        }\n        else if (reach < 1000000000000)\n        {\n            returnObject['count'] = parseFloat(reach/1000000000).toFixed(0);\n            returnObject['unit'] = 'b';\n        }\n        return returnObject;\n    }\n\n    getCategories(userDetails)\n    {\n        let categories = this.safeReturn(userDetails,'categories',[]);\n        let categoryXml = [];\n        for(let i in categories)\n        {\n            console.log(\"categories\",categories[i]);\n            let category = this.safeReturn(categories[i],'name','');\n            categoryXml.push(<span key ={i}>{category}</span>)\n        }\n        return categoryXml;\n    }\n    getAverageRating(userDetails)\n    {\n        let averageRating = this.safeReturn(userDetails,'averageRating',0);\n        let averageRatingXml = [];\n        for(let i=0 ; i < averageRating; i++)\n        {\n            averageRatingXml.push(<span key ={i} className=\"fa fa-star checked\"></span>)\n        }\n        for(let i=0 ; i < (5-averageRating); i++)\n        {\n            averageRatingXml.push(<span key ={i} className=\"fa fa-star checked\"></span>)\n        }\n        return averageRatingXml;\n    }\n    render(){\n\n       let userDetails = this.userDetails();\n        let imageUrl = this.safeReturn(userDetails,'imageUrl','');\n        let name = this.safeReturn(userDetails,'name','');\n        let profession = this.safeReturn(userDetails,'profession','');\n        let price = this.reachCountToObject(this.safeReturn(userDetails,'price',0));\n        let bio = this.safeReturn(userDetails,'bio','');\n\n        let categoryXml = this.getCategories(userDetails);\n        let ratingXml = this.getAverageRating(userDetails);\n\n        price = price['count'] + price['unit'];\n        return(\n            <div className=\"celeb--detail-wrapper\">\n                    <div className=\"col-md-4 col-sm-4 col-xs-12 celeb-picture\">\n                        <img src={imageUrl} className=\"img-responsive\"/>\n                    </div>\n                    <div className=\"col-md-8 col-sm-8 col-xs-12 celeb-detail\">\n                        <div className=\"personal--detail\">\n                            <h2>{name}</h2>\n                            <h3>{profession}</h3>\n                            <p className=\"celeb--decs\">{bio}</p>\n                            <p className=\"celeb--form\">\n                                <span>Book {name} for {price}</span>\n                            </p>\n                        </div>\n                        <div className=\"celeb-review\">\n                            <div className=\"col-sm-4\">\n                                <p>1 Review</p>\n                                <div className=\"celeb-rating\">\n                                    {ratingXml}\n                                </div>\n                                {/*<p><span>See all reviews</span></p>*/}\n                            </div>\n                            <div className=\"col-sm-8\">\n                                <p>\"Thank you SO much! Noel loved this more than words can say. This was perfect!\"</p>\n                            </div>\n                        </div>\n                        <div className=\"celeb-batch\">\n                            {categoryXml}\n                        </div>\n\n                    </div>\n                </div>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\n\nconst filterName = [\n    {'name':'Disney', 'number': '165'},\n    {'name':'Actor', 'number': '205'},\n    {'name':'TV', 'number': '356'},\n    {'name':'YouTubers', 'number': '86'},\n    {'name':'Animals', 'number': '30'},\n    {'name':'Comedians', 'number': '535'},\n    {'name':'Family', 'number': '222'}\n];\n\n\nclass Filter extends React.Component{\n\n    getFilterNames(){\n        let filterXml = []\n\n        for(let i in filterName){\n            filterXml.push(\n                <div className=\"filters-wrap\" key={filterName[i].name}>\n                    <p className=\"badge badge-light\">{filterName[i].name}<span>{filterName[i].number}</span></p>\n                </div>\n            )\n        }\n        return filterXml\n    }\n\n    render(){\n        return(\n            <div id=\"left--filters\">\n                <h3>Categories</h3>\n                <div>\n                    {this.getFilterNames()}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Filter;","import React from 'react';\nimport Profiles from '../profiles.json';\nimport {NavLink} from 'react-router-dom';\nimport $ from 'jquery'\n\nclass Card extends React.Component{\n\n    safeReturn(object,index,defaultValue)\n    {\n        defaultValue = defaultValue == undefined ? false : defaultValue;\n        if(object == undefined || index == undefined)\n        {\n            return defaultValue;\n        }\n        if(object[index] == undefined || object[index] === '')\n        {\n            return defaultValue;\n        }\n        return object[index];\n    }\n\n    componentDidMount(){\n\n    }\n\n    reachCountToObject(reach)\n    {\n        var returnObject = {};\n        reach = parseInt(reach);\n        returnObject['count'] = reach;\n        returnObject['unit'] = '';\n        if(reach < 1000)\n        {\n            return returnObject;\n        }\n        else if (reach < 1000000)\n        {\n            returnObject['count'] = parseFloat(reach/1000).toFixed(0);\n            returnObject['unit'] = 'k';\n        }\n        else if (reach < 1000000000)\n        {\n            returnObject['count'] = parseFloat(reach/1000000).toFixed(0);\n            returnObject['unit'] = 'm';\n        }\n        else if (reach < 1000000000000)\n        {\n            returnObject['count'] = parseFloat(reach/1000000000).toFixed(0);\n            returnObject['unit'] = 'b';\n        }\n        return returnObject;\n    }\n    getCardDetail(){\n        let cardXml = []\n\n         let userprofiles = Profiles.users;\n       // let userprofiles = [];\n\n        for(let i in userprofiles){\n            let imageUrl = this.safeReturn(userprofiles[i],'imageUrl','');\n            let name = this.safeReturn(userprofiles[i],'name','');\n            let type = this.safeReturn(userprofiles[i],'profession','');\n            let price = this.reachCountToObject(this.safeReturn(userprofiles[i],'price',0));\n            price = price['count'] + price['unit'];\n            if(imageUrl == '')\n            {\n                continue;\n            }\n            let navigateTo = '/dashboard/'+ i;\n            cardXml.push(\n                <NavLink to={navigateTo}>\n                <div>\n                <div className=\"card-wrap col-md-4 col-sm-6 col-xs-12\" key={i}>\n                    <article className=\"material-card Red\">\n                        <h2>\n                        <span>{name}</span>\n                        <strong>\n                            <i class=\"fa fa-fw fa-star\"></i>\n                            {type}\n                        </strong>\n                    </h2>\n                        <div className=\"mc-content\">\n                            <div className=\"img-container\">\n                                <img className=\"img-responsive\"\n                                     src={imageUrl} />\n                            </div>\n\n                        </div>\n                        <a className=\"mc-btn-action\">\n                            &#8377; {price}\n                        </a>\n\n                    </article>\n                </div>\n\n\n                </div>\n                </NavLink>\n\n\n            )\n        }\n        return cardXml\n    }\n\n    render(){\n        return(\n            <div id=\"right--card\" className=\"row\">\n                {this.getCardDetail()}\n            </div>\n        )\n    }\n}\n\nexport default Card;","import React from 'react';\n\nimport Filter from './filter'\nimport Card from './card'\nimport $ from 'jquery';\n\nclass BrandCards extends React.Component{\n\n    constructor(props){\n        super(props)\n    }\n    componentDidMount(){\n        $(\".shuffleJs\").on(\"click\", function(){\n            $(\".shuffleJs\").removeClass('active');\n            $(this).addClass('active');\n            let dataGroup = $(this).attr('id');\n            window.shuffleInstance.filter(dataGroup);\n        });\n    }\n\n    render(){\n        return(\n            <div id=\"cardWrapper\" className=\"row\">\n                <Filter />\n                <Card />\n            </div>\n        )\n    }\n}\n\nexport default BrandCards;","import React from 'react';\nimport {HashRouter, Route, Switch, Redirect} from 'react-router-dom';\nimport Profile from './Profile'\nimport BrandCards from '../brand/index';\n// require('bootstrap-material-design')\n\nclass Header extends React.Component{\n    render(){\n        return(\n            <div>\n                <ul className=\"nav nav-tabs\">\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link active\" href=\"#\">Search</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">Signup</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">Login</a>\n                    </li>\n                </ul>\n                <HashRouter>\n                        <Switch>\n                            <Route path=\"/dashboard/:id?\" component={Profile}/>\n                            <Route path=\"/brand/\" component={BrandCards}/>\n                            <Redirect to=\"/brand\"/>\n                        </Switch>\n                </HashRouter>\n\n\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\n\nimport './App.css';\n\nimport Header from './header'\nimport BrandCards from './brand'\n\nclass App extends React.Component {\n  render(){\n    return(\n        <div className=\"container\">\n          <Header />\n            {/*<BrandCards />*/}\n        </div>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}